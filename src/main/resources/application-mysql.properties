# database init, supports mysql too
#database=mysql
#spring.datasource.url=${MYSQL_URL:jdbc:mysql://localhost/petclinic}
#spring.datasource.username=${MYSQL_USER:petclinic}
#spring.datasource.password=${MYSQL_PASS:petclinic}
# SQL is written to be idempotent so this is safe
#spring.datasource.initialization-mode=always

# Convert to GCP Cloud SQL Mysql

database=mysql

spring.cloud.gcp.sql.instance-connection-name=${MYSQL_CONN:prj-sre-d-sandbox-run-c366:us-central1:my-db-f4f38aae}
spring.cloud.gcp.sql.database-name=${MYSQL_DB:petclinic}
spring.datasource.username=${MYSQL_USER:petclinic}
spring.datasource.password=${MYSQL_PASS:petclinic}

# Initialize the database since the newly created Cloud SQL database has no tables. The following flag is for Spring Boot 2.
spring.datasource.initialization-mode=always